{"ast":null,"code":"import mongoose from 'mongoose';\nconst connection = {};\n\nasync function connectDB() {\n  if (connection.isConnected) {\n    //checking if the database is connected \n    console.log(\"Using existing connection\");\n    return;\n  } // use a new database connection object\n\n\n  const db = await mongoose.connect(process.env.MONGO_SRV, {\n    //these commands help prevent deprecated warnings when using mongoose. learn from mongoose website\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  console.log(\"DB connected\");\n  connection.isConnected = db.connections[0].readyState;\n} // this whole process is used when connecting mongo DB application with a serverless application like AWS lambda\n\n\nexport default connectDB;","map":{"version":3,"sources":["/Users/danielagbenyega/Desktop/web projects/furnicommerce/utils/connectDb.js"],"names":["mongoose","connection","connectDB","isConnected","console","log","db","connect","process","env","MONGO_SRV","useCreateIndex","useFindAndModify","useNewUrlParser","useUnifiedTopology","connections","readyState"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,UAAU,GAAG,EAAnB;;AAEA,eAAeC,SAAf,GAA2B;AACvB,MAAID,UAAU,CAACE,WAAf,EAA4B;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;AACH,GALsB,CAQvB;;;AACA,QAAMC,EAAE,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACrD;AACAC,IAAAA,cAAc,EAAE,IAFqC;AAGrDC,IAAAA,gBAAgB,EAAE,KAHmC;AAIrDC,IAAAA,eAAe,EAAE,IAJoC;AAKrDC,IAAAA,kBAAkB,EAAE;AALiC,GAAxC,CAAjB;AAOAV,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAJ,EAAAA,UAAU,CAACE,WAAX,GAAyBG,EAAE,CAACS,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACH,C,CAED;;;AAEA,eAAed,SAAf","sourcesContent":["import mongoose from 'mongoose'\n\nconst connection = {};\n\nasync function connectDB() {\n    if (connection.isConnected) {\n        //checking if the database is connected \n        console.log(\"Using existing connection\")\n        return;\n    }\n\n\n    // use a new database connection object\n    const db = await mongoose.connect(process.env.MONGO_SRV, {\n        //these commands help prevent deprecated warnings when using mongoose. learn from mongoose website\n        useCreateIndex: true,\n        useFindAndModify: false,\n        useNewUrlParser: true, \n        useUnifiedTopology: true\n    })\n    console.log(\"DB connected\")\n    connection.isConnected = db.connections[0].readyState;\n}\n\n// this whole process is used when connecting mongo DB application with a serverless application like AWS lambda\n\nexport default connectDB;"]},"metadata":{},"sourceType":"module"}